package io.dummyapi.pojo_classes;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import java.util.Objects;

@JsonIgnoreProperties(ignoreUnknown = true)
public class User {

    private String id; //autogenerated
    private String title;
    private String firstName; //required
    private String lastName; //required
    private String gender;
    private String email; //required
    private String dateOfBirth;
    private String registerDate; //autogenerated
    private String phone;
    private String picture;
    private String updatedDate;

    /*
    id: string(autogenerated)
    title: string("mr", "ms", "mrs", "miss", "dr", "")
    firstName: string(length: 2-50)
    lastName: string(length: 2-50)
    gender: string("male", "female", "other", "")
    email: string(email)
    dateOfBirth: string(ISO Date - value: 1/1/1900 - now)
    registerDate: string(autogenerated)
    phone: string(phone number - any format)
    picture: string(url)
    location: object(Location)
     */

    public User(String title, String firstName, String lastName, String gender, String email, String phone, String picture) {
        this.title = title;
        this.firstName = firstName;
        this.lastName = lastName;
        this.gender = gender;
        this.email = email;
//        this.dateOfBirth = dateOfBirth;
        this.phone = phone;
        this.picture = picture;
    }

    public User() {}

    public String getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public String getFirstName() {
        return firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public String getGender() {
        return gender;
    }

    public String getEmail() {
        return email;
    }

    public String getDateOfBirth() {
        return dateOfBirth;
    }

    public String getRegisterDate() {
        return registerDate;
    }

    public String getPhone() {
        return phone;
    }

    public String getPicture() {
        return picture;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        User user = (User) o;
        return id.equals(user.id) && firstName.equals(user.firstName) && lastName.equals(user.lastName) && email.equals(user.email);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, firstName, lastName, email);
    }
}
